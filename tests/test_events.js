// Generated by LiveScript 1.2.0
describe('just.triger', function(){
  var x$, hasTouch, testTrigger;
  x$ = it;
  beforeEach(function(){
    setFixtures("<button id=\"target\"></button>\n<input id=\"target-input\"></input>");
  });
  hasTouch = window.DocumentTouch != null && document instanceof DocumentTouch;
  testTrigger = function(target, eventName){
    var triggered;
    target = just.byId(target);
    triggered = false;
    target["on" + eventName] = function(){
      return triggered = true;
    };
    runs(function(){
      return just.trigger(eventName, target, null);
    });
    waitsFor(function(){
      return triggered;
    }, eventName + " event to be triggered", 200);
    return runs(function(){
      return expect(triggered).toBe(true);
    });
  };
  x$('should work with mouse event', function(){
    testTrigger('target', 'click');
  });
  x$('should work with change event', function(){
    testTrigger('target-input', 'change');
  });
  x$('should work with keyboard event', function(){
    testTrigger('target-input', 'keydown');
  });
  x$('should work with UI event', function(){
    testTrigger('target', 'scroll');
  });
  if (hasTouch) {
    x$('should work with touch event', function(){
      testTrigger('target', 'touchstart');
    });
  } else {
    if (typeof console != 'undefined' && console !== null) {
      if (typeof console.log === 'function') {
        console.log("Not performing touch event test, not supported");
      }
    }
  }
});